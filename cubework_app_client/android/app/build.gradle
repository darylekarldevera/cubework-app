plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

apply from: "./dotenv.gradle"

android {
    namespace = "com.example.cubework_app_client"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.cubework_app_client"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 21
        compileSdkVersion = 34
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        // Enables the Google Maps API key to be set in the AndroidManifest.xml file.
        manifestPlaceholders.GMAPS_API_KEY = env['GMAPS_API_KEY']
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}

// error handler for missing Google Maps API key
def gmapsApiKey = env['GMAPS_API_KEY']
println("Google Maps API Key: $gmapsApiKey")

if (!gmapsApiKey || gmapsApiKey == "null") {
    throw new GradleException("Google Maps API Key is not set. Please set the GMAPS_API_KEY environment variable.")
}